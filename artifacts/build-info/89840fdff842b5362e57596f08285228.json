{
	"id": "89840fdff842b5362e57596f08285228",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"user verify identity.sol": {
				"content": "pragma solidity ^0.4.17;\r\n\r\n\r\ncontract UserExample {\r\nmapping(address => bool) user_verified;\r\n mapping(address => bytes32) user_codes;\r\n  mapping(bytes32 => address) to_sign;\r\n mapping(bytes32 => bool) signed;\r\n  address owner;\r\n  modifier onlyOwner() {\r\n require(msg.sender == owner);\r\n _;\r\n }\r\n\r\n\r\n function UserExample() public{\r\n owner = msg.sender;\r\n }\r\n \r\nfunction addUser(address user, bytes32 hashed_verification) public onlyOwner {\r\n user_verified[user] = false;\r\n user_codes[user] = hashed_verification;\r\n }\r\n  function verify(bytes32 verification_code) public {\r\n if (user_verified[msg.sender] == false &&\r\n sha256(verification_code) == user_codes[msg.sender]) {\r\n user_verified[msg.sender] = true;\r\n }\r\n  }\r\n    }\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"user verify identity.sol": {
				"UserExample": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "user",
									"type": "address"
								},
								{
									"name": "hashed_verification",
									"type": "bytes32"
								}
							],
							"name": "addUser",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "verification_code",
									"type": "bytes32"
								}
							],
							"name": "verify",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"user verify identity.sol\":30:726  contract UserExample {\r... */\n  mstore(0x40, 0x80)\n    /* \"user verify identity.sol\":302:358  function UserExample() public{\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"user verify identity.sol\":302:358  function UserExample() public{\r... */\n  pop\n    /* \"user verify identity.sol\":343:353  msg.sender */\n  caller\n    /* \"user verify identity.sol\":335:340  owner */\n  0x4\n  0x0\n    /* \"user verify identity.sol\":335:353  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"user verify identity.sol\":30:726  contract UserExample {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"user verify identity.sol\":30:726  contract UserExample {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x64f42a99\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x75e36616\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"user verify identity.sol\":363:518  function addUser(address user, bytes32 hashed_verification) public onlyOwner {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_4\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_4:\n        /* \"user verify identity.sol\":363:518  function addUser(address user, bytes32 hashed_verification) public onlyOwner {\r... */\n      pop\n      tag_5\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_6)\n    tag_5:\n      stop\n        /* \"user verify identity.sol\":522:719  function verify(bytes32 verification_code) public {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"user verify identity.sol\":522:719  function verify(bytes32 verification_code) public {\r... */\n      pop\n      tag_8\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"user verify identity.sol\":363:518  function addUser(address user, bytes32 hashed_verification) public onlyOwner {\r... */\n    tag_6:\n        /* \"user verify identity.sol\":279:284  owner */\n      0x4\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"user verify identity.sol\":265:284  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"user verify identity.sol\":265:275  msg.sender */\n      caller\n        /* \"user verify identity.sol\":265:284  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"user verify identity.sol\":257:285  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_11\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_11:\n        /* \"user verify identity.sol\":466:471  false */\n      0x0\n        /* \"user verify identity.sol\":444:457  user_verified */\n      dup1\n        /* \"user verify identity.sol\":444:463  user_verified[user] */\n      0x0\n        /* \"user verify identity.sol\":458:462  user */\n      dup5\n        /* \"user verify identity.sol\":444:463  user_verified[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"user verify identity.sol\":444:471  user_verified[user] = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"user verify identity.sol\":494:513  hashed_verification */\n      dup1\n        /* \"user verify identity.sol\":475:485  user_codes */\n      0x1\n        /* \"user verify identity.sol\":475:491  user_codes[user] */\n      0x0\n        /* \"user verify identity.sol\":486:490  user */\n      dup5\n        /* \"user verify identity.sol\":475:491  user_codes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"user verify identity.sol\":475:513  user_codes[user] = hashed_verification */\n      dup2\n      not(0x0)\n      and\n      swap1\n      sstore\n      pop\n        /* \"user verify identity.sol\":363:518  function addUser(address user, bytes32 hashed_verification) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"user verify identity.sol\":522:719  function verify(bytes32 verification_code) public {\r... */\n    tag_9:\n        /* \"user verify identity.sol\":609:614  false */\n      0x0\n        /* \"user verify identity.sol\":580:614  user_verified[msg.sender] == false */\n      iszero\n      iszero\n        /* \"user verify identity.sol\":580:593  user_verified */\n      0x0\n        /* \"user verify identity.sol\":580:605  user_verified[msg.sender] */\n      dup1\n        /* \"user verify identity.sol\":594:604  msg.sender */\n      caller\n        /* \"user verify identity.sol\":580:605  user_verified[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"user verify identity.sol\":580:614  user_verified[msg.sender] == false */\n      iszero\n      iszero\n      eq\n        /* \"user verify identity.sol\":580:671  user_verified[msg.sender] == false &&\r... */\n      dup1\n      iszero\n      tag_14\n      jumpi\n      pop\n        /* \"user verify identity.sol\":649:659  user_codes */\n      0x1\n        /* \"user verify identity.sol\":649:671  user_codes[msg.sender] */\n      0x0\n        /* \"user verify identity.sol\":660:670  msg.sender */\n      caller\n        /* \"user verify identity.sol\":649:671  user_codes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"user verify identity.sol\":620:671  sha256(verification_code) == user_codes[msg.sender] */\n      not(0x0)\n      and\n        /* \"user verify identity.sol\":620:645  sha256(verification_code) */\n      0x2\n        /* \"user verify identity.sol\":627:644  verification_code */\n      dup3\n        /* \"user verify identity.sol\":620:645  sha256(verification_code) */\n      mload(0x40)\n      dup1\n      dup3\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup7\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"user verify identity.sol\":620:645  sha256(verification_code) */\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_16:\n        /* \"user verify identity.sol\":620:645  sha256(verification_code) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"user verify identity.sol\":620:671  sha256(verification_code) == user_codes[msg.sender] */\n      not(0x0)\n      and\n      eq\n        /* \"user verify identity.sol\":580:671  user_verified[msg.sender] == false &&\r... */\n    tag_14:\n        /* \"user verify identity.sol\":576:714  if (user_verified[msg.sender] == false &&\r... */\n      iszero\n      tag_17\n      jumpi\n        /* \"user verify identity.sol\":705:709  true */\n      0x1\n        /* \"user verify identity.sol\":677:690  user_verified */\n      0x0\n        /* \"user verify identity.sol\":677:702  user_verified[msg.sender] */\n      dup1\n        /* \"user verify identity.sol\":691:701  msg.sender */\n      caller\n        /* \"user verify identity.sol\":677:702  user_verified[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"user verify identity.sol\":677:709  user_verified[msg.sender] = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"user verify identity.sol\":576:714  if (user_verified[msg.sender] == false &&\r... */\n    tag_17:\n        /* \"user verify identity.sol\":522:719  function verify(bytes32 verification_code) public {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820098f1ddba652c49dec10d1c3d09f0c2ae7edb20cb37fa8e68519bec3e37c0a570029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061035f806100616000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806364f42a991461005157806375e36616146100a2575b600080fd5b34801561005d57600080fd5b506100a0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356000191690602001909291905050506100d3565b005b3480156100ae57600080fd5b506100d160048036038101908080356000191690602001909291905050506101d2565b005b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561012f57600080fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081600019169055505050565b600015156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151480156102d35750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600019166002826040518082600019166000191681526020019150506020604051808303816000865af11580156102a7573d6000803e3d6000fd5b5050506040513d60208110156102bc57600080fd5b810190808051906020019092919050505060001916145b156103305760016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b505600a165627a7a72305820098f1ddba652c49dec10d1c3d09f0c2ae7edb20cb37fa8e68519bec3e37c0a570029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x35F DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x64F42A99 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x75E36616 EQ PUSH2 0xA2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1D2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x0 NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ DUP1 ISZERO PUSH2 0x2D3 JUMPI POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x0 NOT AND PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 NOT AND EQ JUMPDEST ISZERO PUSH2 0x330 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 MULMOD DUP16 SAR 0xdb 0xa6 MSTORE 0xc4 SWAP14 0xec LT 0xd1 0xc3 0xd0 SWAP16 0xc 0x2a 0xe7 0xed 0xb2 0xc 0xb3 PUSH32 0xA8E68519BEC3E37C0A5700290000000000000000000000000000000000000000 ",
							"sourceMap": "30:696:0:-;;;302:56;8:9:-1;5:2;;;30:1;27;20:12;5:2;302:56:0;343:10;335:5;;:18;;;;;;;;;;;;;;;;;;30:696;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806364f42a991461005157806375e36616146100a2575b600080fd5b34801561005d57600080fd5b506100a0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356000191690602001909291905050506100d3565b005b3480156100ae57600080fd5b506100d160048036038101908080356000191690602001909291905050506101d2565b005b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561012f57600080fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081600019169055505050565b600015156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151480156102d35750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600019166002826040518082600019166000191681526020019150506020604051808303816000865af11580156102a7573d6000803e3d6000fd5b5050506040513d60208110156102bc57600080fd5b810190808051906020019092919050505060001916145b156103305760016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b505600a165627a7a72305820098f1ddba652c49dec10d1c3d09f0c2ae7edb20cb37fa8e68519bec3e37c0a570029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x64F42A99 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x75E36616 EQ PUSH2 0xA2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1D2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x0 NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ DUP1 ISZERO PUSH2 0x2D3 JUMPI POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x0 NOT AND PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 NOT AND EQ JUMPDEST ISZERO PUSH2 0x330 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 MULMOD DUP16 SAR 0xdb 0xa6 MSTORE 0xc4 SWAP14 0xec LT 0xd1 0xc3 0xd0 SWAP16 0xc 0x2a 0xe7 0xed 0xb2 0xc 0xb3 PUSH32 0xA8E68519BEC3E37C0A5700290000000000000000000000000000000000000000 ",
							"sourceMap": "30:696:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;363:155;;8:9:-1;5:2;;;30:1;27;20:12;5:2;363:155:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;522:197;;8:9:-1;5:2;;;30:1;27;20:12;5:2;522:197:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;363:155;279:5;;;;;;;;;;;265:19;;:10;:19;;;257:28;;;;;;;;466:5;444:13;:19;458:4;444:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;494:19;475:10;:16;486:4;475:16;;;;;;;;;;;;;;;:38;;;;;;;363:155;;:::o;522:197::-;609:5;580:34;;:13;:25;594:10;580:25;;;;;;;;;;;;;;;;;;;;;;;;;:34;;;:91;;;;;649:10;:22;660:10;649:22;;;;;;;;;;;;;;;;620:51;;;:25;627:17;620:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;620:25:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;620:25:0;;;;;;;;;;;;;;;;:51;;;;580:91;576:138;;;705:4;677:13;:25;691:10;677:25;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;576:138;522:197;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "172600",
								"executionCost": "20480",
								"totalCost": "193080"
							},
							"external": {
								"addUser(address,bytes32)": "40981",
								"verify(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 30,
									"end": 726,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 30,
									"end": 726,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 30,
									"end": 726,
									"name": "MSTORE"
								},
								{
									"begin": 302,
									"end": 358,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 302,
									"end": 358,
									"name": "POP"
								},
								{
									"begin": 343,
									"end": 353,
									"name": "CALLER"
								},
								{
									"begin": 335,
									"end": 340,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 335,
									"end": 340,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 335,
									"end": 353,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 335,
									"end": 353,
									"name": "EXP"
								},
								{
									"begin": 335,
									"end": 353,
									"name": "DUP2"
								},
								{
									"begin": 335,
									"end": 353,
									"name": "SLOAD"
								},
								{
									"begin": 335,
									"end": 353,
									"name": "DUP2"
								},
								{
									"begin": 335,
									"end": 353,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 335,
									"end": 353,
									"name": "MUL"
								},
								{
									"begin": 335,
									"end": 353,
									"name": "NOT"
								},
								{
									"begin": 335,
									"end": 353,
									"name": "AND"
								},
								{
									"begin": 335,
									"end": 353,
									"name": "SWAP1"
								},
								{
									"begin": 335,
									"end": 353,
									"name": "DUP4"
								},
								{
									"begin": 335,
									"end": 353,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 335,
									"end": 353,
									"name": "AND"
								},
								{
									"begin": 335,
									"end": 353,
									"name": "MUL"
								},
								{
									"begin": 335,
									"end": 353,
									"name": "OR"
								},
								{
									"begin": 335,
									"end": 353,
									"name": "SWAP1"
								},
								{
									"begin": 335,
									"end": 353,
									"name": "SSTORE"
								},
								{
									"begin": 335,
									"end": 353,
									"name": "POP"
								},
								{
									"begin": 30,
									"end": 726,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30,
									"end": 726,
									"name": "DUP1"
								},
								{
									"begin": 30,
									"end": 726,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30,
									"end": 726,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30,
									"end": 726,
									"name": "CODECOPY"
								},
								{
									"begin": 30,
									"end": 726,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30,
									"end": 726,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820098f1ddba652c49dec10d1c3d09f0c2ae7edb20cb37fa8e68519bec3e37c0a570029",
									".code": [
										{
											"begin": 30,
											"end": 726,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "MSTORE"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "LT"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "SWAP1"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "DIV"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "AND"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "DUP1"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "PUSH",
											"value": "64F42A99"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "EQ"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "DUP1"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "PUSH",
											"value": "75E36616"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "EQ"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "JUMPDEST"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "DUP1"
										},
										{
											"begin": 30,
											"end": 726,
											"name": "REVERT"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "JUMPDEST"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "POP"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "DUP1"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "SUB"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "DUP2"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "ADD"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "SWAP1"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "DUP1"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "DUP1"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "AND"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "SWAP1"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "ADD"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "SWAP1"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "SWAP3"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "SWAP2"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "SWAP1"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "DUP1"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "NOT"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "AND"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "SWAP1"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "ADD"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "SWAP1"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "SWAP3"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "SWAP2"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "SWAP1"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "POP"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "POP"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "POP"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "JUMP"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "JUMPDEST"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "STOP"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "JUMPDEST"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "POP"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "DUP1"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "SUB"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "DUP2"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "ADD"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "SWAP1"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "DUP1"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "DUP1"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "NOT"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "AND"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "SWAP1"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "ADD"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "SWAP1"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "SWAP3"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "SWAP2"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "SWAP1"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "POP"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "POP"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "POP"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "JUMP"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "JUMPDEST"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "STOP"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "JUMPDEST"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "SLOAD"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "EXP"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DIV"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "AND"
										},
										{
											"begin": 265,
											"end": 284,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 265,
											"end": 284,
											"name": "AND"
										},
										{
											"begin": 265,
											"end": 275,
											"name": "CALLER"
										},
										{
											"begin": 265,
											"end": 284,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 265,
											"end": 284,
											"name": "AND"
										},
										{
											"begin": 265,
											"end": 284,
											"name": "EQ"
										},
										{
											"begin": 257,
											"end": 285,
											"name": "ISZERO"
										},
										{
											"begin": 257,
											"end": 285,
											"name": "ISZERO"
										},
										{
											"begin": 257,
											"end": 285,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 257,
											"end": 285,
											"name": "JUMPI"
										},
										{
											"begin": 257,
											"end": 285,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 257,
											"end": 285,
											"name": "DUP1"
										},
										{
											"begin": 257,
											"end": 285,
											"name": "REVERT"
										},
										{
											"begin": 257,
											"end": 285,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 257,
											"end": 285,
											"name": "JUMPDEST"
										},
										{
											"begin": 466,
											"end": 471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 444,
											"end": 457,
											"name": "DUP1"
										},
										{
											"begin": 444,
											"end": 463,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 458,
											"end": 462,
											"name": "DUP5"
										},
										{
											"begin": 444,
											"end": 463,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 444,
											"end": 463,
											"name": "AND"
										},
										{
											"begin": 444,
											"end": 463,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 444,
											"end": 463,
											"name": "AND"
										},
										{
											"begin": 444,
											"end": 463,
											"name": "DUP2"
										},
										{
											"begin": 444,
											"end": 463,
											"name": "MSTORE"
										},
										{
											"begin": 444,
											"end": 463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 444,
											"end": 463,
											"name": "ADD"
										},
										{
											"begin": 444,
											"end": 463,
											"name": "SWAP1"
										},
										{
											"begin": 444,
											"end": 463,
											"name": "DUP2"
										},
										{
											"begin": 444,
											"end": 463,
											"name": "MSTORE"
										},
										{
											"begin": 444,
											"end": 463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 444,
											"end": 463,
											"name": "ADD"
										},
										{
											"begin": 444,
											"end": 463,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 444,
											"end": 463,
											"name": "KECCAK256"
										},
										{
											"begin": 444,
											"end": 463,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "EXP"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "SLOAD"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "MUL"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "NOT"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "AND"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "SWAP1"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "DUP4"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "ISZERO"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "ISZERO"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "MUL"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "OR"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "SWAP1"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "SSTORE"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "POP"
										},
										{
											"begin": 494,
											"end": 513,
											"name": "DUP1"
										},
										{
											"begin": 475,
											"end": 485,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 486,
											"end": 490,
											"name": "DUP5"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "AND"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "AND"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "DUP2"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "MSTORE"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "ADD"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "SWAP1"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "DUP2"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "MSTORE"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "ADD"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "KECCAK256"
										},
										{
											"begin": 475,
											"end": 513,
											"name": "DUP2"
										},
										{
											"begin": 475,
											"end": 513,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 475,
											"end": 513,
											"name": "NOT"
										},
										{
											"begin": 475,
											"end": 513,
											"name": "AND"
										},
										{
											"begin": 475,
											"end": 513,
											"name": "SWAP1"
										},
										{
											"begin": 475,
											"end": 513,
											"name": "SSTORE"
										},
										{
											"begin": 475,
											"end": 513,
											"name": "POP"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "POP"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "POP"
										},
										{
											"begin": 363,
											"end": 518,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "JUMPDEST"
										},
										{
											"begin": 609,
											"end": 614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 580,
											"end": 614,
											"name": "ISZERO"
										},
										{
											"begin": 580,
											"end": 614,
											"name": "ISZERO"
										},
										{
											"begin": 580,
											"end": 593,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "DUP1"
										},
										{
											"begin": 594,
											"end": 604,
											"name": "CALLER"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "AND"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "AND"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "DUP2"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "MSTORE"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "ADD"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "SWAP1"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "DUP2"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "MSTORE"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "ADD"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "KECCAK256"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "SWAP1"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "SLOAD"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "SWAP1"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "EXP"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "SWAP1"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "DIV"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 580,
											"end": 605,
											"name": "AND"
										},
										{
											"begin": 580,
											"end": 614,
											"name": "ISZERO"
										},
										{
											"begin": 580,
											"end": 614,
											"name": "ISZERO"
										},
										{
											"begin": 580,
											"end": 614,
											"name": "EQ"
										},
										{
											"begin": 580,
											"end": 671,
											"name": "DUP1"
										},
										{
											"begin": 580,
											"end": 671,
											"name": "ISZERO"
										},
										{
											"begin": 580,
											"end": 671,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 580,
											"end": 671,
											"name": "JUMPI"
										},
										{
											"begin": 580,
											"end": 671,
											"name": "POP"
										},
										{
											"begin": 649,
											"end": 659,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 649,
											"end": 671,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 660,
											"end": 670,
											"name": "CALLER"
										},
										{
											"begin": 649,
											"end": 671,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 649,
											"end": 671,
											"name": "AND"
										},
										{
											"begin": 649,
											"end": 671,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 649,
											"end": 671,
											"name": "AND"
										},
										{
											"begin": 649,
											"end": 671,
											"name": "DUP2"
										},
										{
											"begin": 649,
											"end": 671,
											"name": "MSTORE"
										},
										{
											"begin": 649,
											"end": 671,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 649,
											"end": 671,
											"name": "ADD"
										},
										{
											"begin": 649,
											"end": 671,
											"name": "SWAP1"
										},
										{
											"begin": 649,
											"end": 671,
											"name": "DUP2"
										},
										{
											"begin": 649,
											"end": 671,
											"name": "MSTORE"
										},
										{
											"begin": 649,
											"end": 671,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 649,
											"end": 671,
											"name": "ADD"
										},
										{
											"begin": 649,
											"end": 671,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 649,
											"end": 671,
											"name": "KECCAK256"
										},
										{
											"begin": 649,
											"end": 671,
											"name": "SLOAD"
										},
										{
											"begin": 620,
											"end": 671,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 620,
											"end": 671,
											"name": "NOT"
										},
										{
											"begin": 620,
											"end": 671,
											"name": "AND"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 627,
											"end": 644,
											"name": "DUP3"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "MLOAD"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "DUP1"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "DUP3"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "NOT"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "AND"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "NOT"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "AND"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "DUP2"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "MSTORE"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "ADD"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "SWAP2"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "POP"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "POP"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "MLOAD"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "DUP1"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "DUP4"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "SUB"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "DUP2"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "DUP7"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "GAS"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "CALL"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "POP"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "POP"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "POP"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "MLOAD"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "DUP2"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "ADD"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "SWAP1"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "DUP1"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "DUP1"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "MLOAD"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "SWAP1"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "ADD"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "SWAP1"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "SWAP3"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "SWAP2"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "SWAP1"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "POP"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "POP"
										},
										{
											"begin": 620,
											"end": 645,
											"name": "POP"
										},
										{
											"begin": 620,
											"end": 671,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 620,
											"end": 671,
											"name": "NOT"
										},
										{
											"begin": 620,
											"end": 671,
											"name": "AND"
										},
										{
											"begin": 620,
											"end": 671,
											"name": "EQ"
										},
										{
											"begin": 580,
											"end": 671,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 580,
											"end": 671,
											"name": "JUMPDEST"
										},
										{
											"begin": 576,
											"end": 714,
											"name": "ISZERO"
										},
										{
											"begin": 576,
											"end": 714,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 576,
											"end": 714,
											"name": "JUMPI"
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 677,
											"end": 702,
											"name": "DUP1"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "CALLER"
										},
										{
											"begin": 677,
											"end": 702,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 677,
											"end": 702,
											"name": "AND"
										},
										{
											"begin": 677,
											"end": 702,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 677,
											"end": 702,
											"name": "AND"
										},
										{
											"begin": 677,
											"end": 702,
											"name": "DUP2"
										},
										{
											"begin": 677,
											"end": 702,
											"name": "MSTORE"
										},
										{
											"begin": 677,
											"end": 702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 677,
											"end": 702,
											"name": "ADD"
										},
										{
											"begin": 677,
											"end": 702,
											"name": "SWAP1"
										},
										{
											"begin": 677,
											"end": 702,
											"name": "DUP2"
										},
										{
											"begin": 677,
											"end": 702,
											"name": "MSTORE"
										},
										{
											"begin": 677,
											"end": 702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 677,
											"end": 702,
											"name": "ADD"
										},
										{
											"begin": 677,
											"end": 702,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 677,
											"end": 702,
											"name": "KECCAK256"
										},
										{
											"begin": 677,
											"end": 702,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 677,
											"end": 709,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 677,
											"end": 709,
											"name": "EXP"
										},
										{
											"begin": 677,
											"end": 709,
											"name": "DUP2"
										},
										{
											"begin": 677,
											"end": 709,
											"name": "SLOAD"
										},
										{
											"begin": 677,
											"end": 709,
											"name": "DUP2"
										},
										{
											"begin": 677,
											"end": 709,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 677,
											"end": 709,
											"name": "MUL"
										},
										{
											"begin": 677,
											"end": 709,
											"name": "NOT"
										},
										{
											"begin": 677,
											"end": 709,
											"name": "AND"
										},
										{
											"begin": 677,
											"end": 709,
											"name": "SWAP1"
										},
										{
											"begin": 677,
											"end": 709,
											"name": "DUP4"
										},
										{
											"begin": 677,
											"end": 709,
											"name": "ISZERO"
										},
										{
											"begin": 677,
											"end": 709,
											"name": "ISZERO"
										},
										{
											"begin": 677,
											"end": 709,
											"name": "MUL"
										},
										{
											"begin": 677,
											"end": 709,
											"name": "OR"
										},
										{
											"begin": 677,
											"end": 709,
											"name": "SWAP1"
										},
										{
											"begin": 677,
											"end": 709,
											"name": "SSTORE"
										},
										{
											"begin": 677,
											"end": 709,
											"name": "POP"
										},
										{
											"begin": 576,
											"end": 714,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 576,
											"end": 714,
											"name": "JUMPDEST"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "POP"
										},
										{
											"begin": 522,
											"end": 719,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addUser(address,bytes32)": "64f42a99",
							"verify(bytes32)": "75e36616"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"hashed_verification\",\"type\":\"bytes32\"}],\"name\":\"addUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"verification_code\",\"type\":\"bytes32\"}],\"name\":\"verify\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"user verify identity.sol\":\"UserExample\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"user verify identity.sol\":{\"keccak256\":\"0xe73425f6e6d443223ff5ae326385884d5a76761c29be5de554bb58848a234c31\",\"urls\":[\"bzzr://7d238276f576d2e623de52f1c87c1725e279274cd1b666248733c71f5f966d34\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "user verify identity.sol:16:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n function UserExample() public{\r\n ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 358,
					"file": "user verify identity.sol",
					"start": 302
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "user verify identity.sol:26:2: Warning: This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.\n sha256(verification_code) == user_codes[msg.sender]) {\r\n ^-----------------------^\n",
				"message": "This function only accepts a single \"bytes\" argument. Please use \"abi.encodePacked(...)\" or a similar function to encode the data.",
				"severity": "warning",
				"sourceLocation": {
					"end": 645,
					"file": "user verify identity.sol",
					"start": 620
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "user verify identity.sol:26:2: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.\n sha256(verification_code) == user_codes[msg.sender]) {\r\n ^-----------------------^\n",
				"message": "The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.",
				"severity": "warning",
				"sourceLocation": {
					"end": 645,
					"file": "user verify identity.sol",
					"start": 620
				},
				"type": "Warning"
			}
		],
		"sources": {
			"user verify identity.sol": {
				"ast": {
					"absolutePath": "user verify identity.sol",
					"exportedSymbols": {
						"UserExample": [
							92
						]
					},
					"id": 93,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 92,
							"linearizedBaseContracts": [
								92
							],
							"name": "UserExample",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"name": "user_verified",
									"nodeType": "VariableDeclaration",
									"scope": 92,
									"src": "54:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "62:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "54:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 3,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "73:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 9,
									"name": "user_codes",
									"nodeType": "VariableDeclaration",
									"scope": 92,
									"src": "96:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
										"typeString": "mapping(address => bytes32)"
									},
									"typeName": {
										"id": 8,
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "104:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "96:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
											"typeString": "mapping(address => bytes32)"
										},
										"valueType": {
											"id": 7,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "115:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 13,
									"name": "to_sign",
									"nodeType": "VariableDeclaration",
									"scope": 92,
									"src": "139:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
										"typeString": "mapping(bytes32 => address)"
									},
									"typeName": {
										"id": 12,
										"keyType": {
											"id": 10,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "147:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "139:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
											"typeString": "mapping(bytes32 => address)"
										},
										"valueType": {
											"id": 11,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "158:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"name": "signed",
									"nodeType": "VariableDeclaration",
									"scope": 92,
									"src": "178:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
										"typeString": "mapping(bytes32 => bool)"
									},
									"typeName": {
										"id": 16,
										"keyType": {
											"id": 14,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "186:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "178:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
											"typeString": "mapping(bytes32 => bool)"
										},
										"valueType": {
											"id": 15,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "197:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 19,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 92,
									"src": "214:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 18,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "214:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "253:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 22,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 107,
																	"src": "265:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "265:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 24,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "279:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "265:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															111
														],
														"referencedDeclaration": 110,
														"src": "257:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "257:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "257:28:0"
											},
											{
												"id": 28,
												"nodeType": "PlaceholderStatement",
												"src": "289:1:0"
											}
										]
									},
									"documentation": null,
									"id": 30,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "250:2:0"
									},
									"src": "232:63:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "331:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 33,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "335:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 34,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "343:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "343:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "335:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "335:18:0"
											}
										]
									},
									"documentation": null,
									"id": 39,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "UserExample",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "322:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "331:0:0"
									},
									"scope": 92,
									"src": "302:56:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "440:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 48,
															"name": "user_verified",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "444:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 50,
														"indexExpression": {
															"argumentTypes": null,
															"id": 49,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "458:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "444:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "466:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "444:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "444:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 54,
															"name": "user_codes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "475:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
																"typeString": "mapping(address => bytes32)"
															}
														},
														"id": 56,
														"indexExpression": {
															"argumentTypes": null,
															"id": 55,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "486:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "475:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 57,
														"name": "hashed_verification",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "494:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "475:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "475:38:0"
											}
										]
									},
									"documentation": null,
									"id": 61,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 46,
											"modifierName": {
												"argumentTypes": null,
												"id": 45,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 30,
												"src": "430:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "430:9:0"
										}
									],
									"name": "addUser",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "380:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"name": "hashed_verification",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "394:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 42,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "379:43:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "440:0:0"
									},
									"scope": 92,
									"src": "363:155:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "572:147:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 66,
																"name": "user_verified",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "580:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 69,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 67,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 107,
																	"src": "594:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "594:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "580:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "66616c7365",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "609:5:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														"src": "580:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 73,
																	"name": "verification_code",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 63,
																	"src": "627:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 72,
																"name": "sha256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "620:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_sha256_pure$__$returns$_t_bytes32_$",
																	"typeString": "function () pure returns (bytes32)"
																}
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "620:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 75,
																"name": "user_codes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "649:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
																	"typeString": "mapping(address => bytes32)"
																}
															},
															"id": 78,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 76,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 107,
																	"src": "660:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "660:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "649:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "620:51:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "580:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 89,
												"nodeType": "IfStatement",
												"src": "576:138:0",
												"trueBody": {
													"id": 88,
													"nodeType": "Block",
													"src": "673:41:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 81,
																		"name": "user_verified",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "677:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 84,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 82,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 107,
																			"src": "691:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 83,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "691:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "677:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 85,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "705:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "677:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 87,
															"nodeType": "ExpressionStatement",
															"src": "677:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 91,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "verify",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"name": "verification_code",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "538:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "537:27:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "572:0:0"
									},
									"scope": 92,
									"src": "522:197:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 93,
							"src": "30:696:0"
						}
					],
					"src": "0:728:0"
				},
				"id": 0
			}
		}
	}
}